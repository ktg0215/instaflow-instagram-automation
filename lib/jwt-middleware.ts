// Simple JWT decode for middleware compatibility 
// This works with tokens generated by jsonwebtoken library

export function verifyJWT(token: string) {
  try {
    // Simple JWT decode without signature verification for middleware
    // The signature verification is handled by API routes
    const parts = token.split('.')
    if (parts.length !== 3) {
      throw new Error('Invalid JWT token format')
    }
    
    // Decode payload (base64url)
    const payload = JSON.parse(
      Buffer.from(parts[1].replace(/-/g, '+').replace(/_/g, '/'), 'base64').toString()
    )
    
    // Check expiration
    if (payload.exp && Date.now() >= payload.exp * 1000) {
      throw new Error('Token expired')
    }
    
    return payload as { userId: string, email: string, role: string }
  } catch (error) {
    throw new Error('Invalid JWT token')
  }
}